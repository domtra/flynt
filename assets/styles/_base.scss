/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

@include font-face('Encode Sans Semi Condensed', 'EncodeSansSemiCondensed-ExtraBold', '800', 'normal');
@include font-face('Roboto', 'Roboto-Bold', '700', 'normal');
@include font-face('Roboto', 'Roboto-Medium', '500', 'normal');
@include font-face('Roboto', 'Roboto-Regular', '400', 'normal');

html {
  background-color: var(--color-background);
  box-sizing: border-box;
  color: var(--color-text);
  font-family: 'Roboto', Helvetica, Arial, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.66;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  word-wrap: break-word;


  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  height: 100%;
  overflow-x: hidden;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
  }
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: var(--color-headline);
  font-family: 'Encode Sans Semi Condensed', Helvetica, Arial, sans-serif;
  font-weight: 800;
  line-height: 1.45;
  margin-bottom: 1.5rem;
  margin-top: 2rem;

  a,
  a:hover,
  a:focus {
    color: var(--color-headline);
    text-decoration: none;
  }
}

h1,
.h1 {
  font-size: 2.75rem;
  line-height: 1.2;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 3.5rem;
    line-height: 1.3;
  }
}

h2,
.h2 {
  font-size: 1.75rem;
  line-height: 1.3;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.75rem;
  }
}

h3,
.h3 {
  font-size: 1.375rem;
  letter-spacing: 1px;
  line-height: 1.18;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.25rem;
    line-height: 1.3;
  }
}

h4,
.h4 {
  font-size: 1.125rem;
  letter-spacing: 1px;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.75rem;
    line-height: 1.35;
  }
}

h5,
.h5 {
  font-family: 'Roboto', Helvetica, Arial, sans-serif;
  font-size: 1.125rem;
  font-weight: 500;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.375rem;
    line-height: 1.4;
  }
}

h6,
.h6 {
  font-family: 'Roboto', Helvetica, Arial, sans-serif;
  font-size: 1rem;
  font-weight: 500;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
    line-height: 1.6;
  }
}

a {
  color: var(--color-accent);
  font-weight: 500;
  text-decoration: none;
  transition: color 0.2s ease;

  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:focus {
    color: var(--color-accent-hover);
    outline-color: var(--color-accent-alpha);
    transition: color 0.2s ease;
  }
}

p,
.paragraph,
table,
figure {
  margin: 0 0 1.5rem;
}

hr {
  background-color: var(--color-accent);
  border: 0;
  display: block;
  height: 2px;
  margin: 3rem 0;
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 0.875rem;
  line-height: 1.4;
  margin-top: 1rem;
}

code {
  background-color: rgba(0, 0, 0, 0.05);
  display: inline-block;
  padding: 0 0.313rem;
}

blockquote,
.blockquote {
  color: var(--color-accent);
  font-size: 1.125rem;
  font-weight: 700;
  line-height: 1.35;
  margin: 3rem 0;
  max-width: 600px;
  padding-left: 2rem;
  position: relative;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.75rem;
    padding-left: 3.75rem;
  }

  &::before {
    content: 'â€œ';
    font-family: 'Encode Sans Semi Condensed', Helvetica, Arial, sans-serif;
    font-size: 2.5rem;
    font-weight: 800;
    left: 0;
    line-height: 1.1;
    position: absolute;
    top: 0;

    @media (min-width: $breakpoint-mobile-horizontal) {
      font-size: 4rem;
    }
  }

  p:last-child {
    margin-bottom: 0;
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  @include reset-content-margins;
  margin: 3rem 0;
  padding-left: 1.5rem;

  ul,
  ol {
    margin-bottom: 0;
    margin-top: 0;
  }

  li {
    line-height: 2;
    margin-bottom: 0.5rem;
  }
}

/* Icon Lists */

.iconList {
  list-style: none;
  padding: 0;

  li {
    margin-bottom: 0.5rem;
    padding-left: 1.75rem;
    position: relative;

    .feather:first-child {
      display: block;
      height: 20px;
      left: 0;
      position: absolute;
      top: 2px;
      width: 20px;

      @media (min-width: $breakpoint-mobile-horizontal) {
        top: 5px;
      }
    }
  }
}

/* Tables */

table {
  border: 1px solid var(--color-border);
  border-spacing: 0;
  max-width: 100%;
  width: 100%;
}

.boxRadius > thead {
  th {
    border: 1px solid  var(--color-border); // fix IE border artifacts

    &:first-child {
      border-top-left-radius: 14px;
    }

    &:last-child {
      border-top-right-radius: 14px;
    }
  }
}

td,
th {
  padding: 0.875rem 1.5rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    background-color: var(--color-border);
    color: var(--color-background);
    padding: 1.25rem 1.5rem;
    vertical-align: middle;
    white-space: nowrap;
  }
}

tbody {
  tr + tr {
    td,
    th {
      border-top: 1px solid var(--color-border);
    }
  }
}

tr:nth-child(even) {
  background-color: rgba(144, 144, 144, 0.1);
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;

  &:focus {
    outline-color: var(--color-accent-alpha);
  }
}

.button {
  appearance: none;
  background-color: var(--color-accent);
  border: 2px solid var(--color-accent);
  border-radius: 30px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
  color: var(--color-background);
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.6;
  outline: none;
  padding: 0.75rem 2rem;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease;
  user-select: none;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
  }

  &:disabled,
  &--disabled {
    background-color: var(--color-border);
    border-color: var(--color-border);
    box-shadow: none;
    cursor: default;
    opacity: 0.5;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--color-accent-hover);
    border-color: var(--color-accent-hover);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
    color: var(--color-background);
  }

  &:focus {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
    color: var(--color-background);
  }

  &:active {
    box-shadow: none;
  }

  &--ghost {
    background-color: var(--transparent);
    border-color: var(--color-accent);
    box-shadow: none;
    color: var(--color-accent);

    &:focus {
      background-color: var(--transparent);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
      color: var(--color-accent);
    }

    &:hover {
      background-color: var(--color-accent);
      border-color: var(--color-accent);
      color: var(--color-background);
    }

    &:active {
      background-color: var(--color-accent);
      border-color: var(--color-accent);
      box-shadow: none;
      color: var(--color-background);
    }

    &:disabled,
    &--disabled {
      background-color: var(--transparent);
      border-color: var(--color-border);
      color: var(--color-border);
    }
  }

  &--small {
    font-size: 0.875rem;
    padding: 0.5rem 1.25rem;
  }

  &--link {
    background-color: var(--transparent);
    border: 0 solid var(--transparent);
    box-shadow: none;
    color: var(--color-accent);
    padding: 0;
    position: relative;
    text-transform: none;
    transition: color 0.2s ease;

    &:hover,
    &:focus {
      background-color: var(--transparent);
      box-shadow: none;
      color: var(--color-accent-hover);
    }

    &:hover {
      &::after {
        animation: arrowFly 0.35s 1;
        transform: rotate(45deg);
      }
    }

    &:focus {
      &::before {
        box-shadow: 0 1px 0 var(--color-accent-alpha), 0 2px 0 var(--color-accent-alpha), 0 3px 0 var(--color-accent-alpha);
      }
    }

    &::before {
      background-color: currentColor;
      bottom: 0;
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      transition: box-shadow 0.2s ease;
      width: 100%;
    }

    &::after {
      border-right: 2px solid currentColor;
      border-top: 2px solid currentColor;
      content: '';
      display: inline-block;
      height: 7px;
      margin-bottom: 1px;
      margin-left: 7px;
      margin-right: 2px;
      transform: rotate(45deg);
      vertical-align: baseline;
      width: 7px;
    }
  }
}

@keyframes arrowFly {
  0% {opacity: 1;
    transform: rotate(45deg) translate(0, 0);}

  50% {opacity: 0;
    transform: rotate(45deg) translate(5px, -5px);}

  51% {opacity: 0;
    transform: rotate(45deg) translate(-5px, 5px);}

  100% {opacity: 1;
    transform: rotate(45deg) translate(0, 0);}
}

/* Icons */

.feather {
  color: var(--color-accent);
  position: relative;
  top: -2px;
  vertical-align: middle;
}

/**
* 1.3 Forms
*
* Global form elements, including structering wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 1.875rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 0.9375rem;
}

label {
  display: inline-block;
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: 1px;
  line-height: 1.25;
  margin-bottom: 0.5rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: transparent;
  border: 2px solid var(--color-border);
  border-radius: 8px;
  color: var(--color-headline);
  font-family: inherit;
  font-size: 1rem;
  letter-spacing: 0.5px;
  line-height: 1.25;
  min-height: 56px;
  outline: none;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;

  &::placeholder {
    color: var(--color-border);
  }

  &:focus {
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px var(--color-accent-alpha);
  }

  &:disabled {
    background-color: rgba(148, 158, 193, 0.2);
    border-color: var(--color-border);
    color: var(--color-border);
    opacity: 0.75;
  }
}

.input-validation-error {
  border-color: var(--color-error);
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 0.5rem 1.25rem;
}

textarea {
  min-height: 150px;
  padding: 1rem;
  resize: vertical;
  vertical-align: top;
  width: 100%;
}

select {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='%23414751' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  line-height: 1.75;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

.select {
  display: inline-block;
  position: relative;
  vertical-align: top;

  &::after {
    border-bottom: 2px solid var(--color-headline);
    border-left: 2px solid var(--color-headline);
    content: '';
    height: 8px;
    position: absolute;
    right: 20px;
    top: calc(50% - 6px);
    transform: rotate(-45deg);
    width: 8px;
    z-index: 1;
  }

  select {
    // don't change backgound image, if you need to change it - use wrapper .select
    background-image: none;
    margin: 0;
    position: relative;
    z-index: 2;

    option {
      color: #000;
    }
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover {
    border-color: var(--color-border);
    outline: 0;
  }

  + label {
    display: inline-block;
    font-size: 400;
    letter-spacing: 0.2px;
    padding-left: 2rem;
    position: relative;

    &::before {
      background: var(--transparent);
      border: 2px solid var(--color-border);
      border-radius: 4px;
      content: '';
      display: block;
      height: 24px;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: -2px;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      width: 24px;
    }

    &::after {
      border-bottom: 3px solid var(--color-accent);
      border-right: 3px solid var(--color-accent);
      content: '';
      display: block;
      height: 14px;
      left: 8px;
      opacity: 0;
      position: absolute;
      top: 1px;
      transform: rotate(45deg);
      transition: opacity 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
      visibility: hidden;
      width: 8px;
    }
  }

  &:focus {
    + label {
      &::before {
        border-color: var(--color-accent);
        box-shadow: 0 0 0 3px var(--color-accent-alpha);
      }
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-accent);
        border-color: var(--color-accent);
      }

      &::after {
        border-color: var(--color-background);
        opacity: 1;
        visibility: visible;
      }
    }
  }
}

[type='radio'] {
  + label {
    &::before {
      border-radius: 50%;
    }

    &::after {
      background-color: var(--color-accent);
      border: 0;
      border-radius: 50%;
      height: 14px;
      left: 5px;
      top: 3px;
      transform: none;
      width: 14px;
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-background);
      }
    }
  }
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  .admin-bar & {
    padding-top: 46px;

    @media (min-width: 782px) {
      padding-top: 32px;
    }
  }
}

.mainContent {
  flex: 1 0 auto;
}

.flyntComponent {
  position: relative;
}

.componentSpacing {
  margin: $component-spacing-mobile 0;

  &[class*='theme'] {
    margin: 0;
    padding: $component-spacing-mobile 0;

    @media (min-width: $breakpoint-tablet) {
      padding: $component-spacing-tablet 0;
    }

    @media (min-width: $breakpoint-desktop) {
      padding: $component-spacing-desktop 0;
    }
  }

  @media (min-width: $breakpoint-tablet) {
    margin: $component-spacing-tablet 0;
  }

  @media (min-width: $breakpoint-desktop) {
    margin: $component-spacing-desktop 0;
  }
}

.centerMaxWidthContainer {
  @include center;

  @media (min-width: $breakpoint-tablet) {
    @include center($padding: $container-padding-tablet);
  }

  @media (min-width: $breakpoint-desktop) {
    @include center($padding: $container-padding-desktop);
  }
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: $content-max-width;
}

.preContent {
  @include reset-content-margins;
  margin: 0 auto 32px;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-bottom: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-bottom: $container-padding-desktop;
  }
}

.postContent {
  @include reset-content-margins;
  margin: 32px auto 0;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-top: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-top: $container-padding-desktop;
  }
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */

.visuallyHidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 1px !important;
}

/* Box Helpers */

.boxPadding {
  @include reset-content-margins;
  padding: 20px;

  @media (min-width: $breakpoint-tablet-horizontal) {
    padding: 30px;
  }
}

.boxRadius {
  border-radius: 16px;
  overflow: hidden;
}

.boxShadow {
  box-shadow: 0 10px 35px -10px rgba(0, 0, 0, 0.1);
}

/* Custom styling for single post layouts */

.post {
  &-main {
    .componentSpacing {
      margin: $component-spacing-mobile/2 0;

      &[class*='theme'] {
        margin: 0;
        padding: $component-spacing-mobile/2 0;

        @media (min-width: $breakpoint-tablet) {
          padding: $component-spacing-tablet/2 0;
        }

        @media (min-width: $breakpoint-desktop) {
          padding: $component-spacing-desktop/2 0;
        }
      }

      @media (min-width: $breakpoint-tablet) {
        margin: $component-spacing-tablet/2 0;
      }

      @media (min-width: $breakpoint-desktop) {
        margin: $component-spacing-desktop/2 0;
      }
    }

    > .componentSpacing {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

/* Skip link behaviour */

.skipLink {
  position: fixed;
  top: -100px;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

[class*='theme'] {
  background-color: var(--color-background);
  color: var(--color-text);
}
